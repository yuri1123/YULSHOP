
#application server port
server.port=8900

#MySQL's connection settings
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://svc.sel3.cloudtype.app:30088/yulshop?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=12345

#sql console out
spring.jpa.properties.hibernate.show_sql=true
#console out in formatting
spring.jpa.properties.hibernate.format_sql=true
#question console out
logging.level.org.hibernate.type.descriptor.sql=trace
#db initial setting
spring.jpa.hibernate.ddl-auto=update
# using mysql's sql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# using devtools
spring.devtools.livereload.enabled=true

spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false
#Off Thymeleaf cache(cashing)

spring.thymeleaf.prefix=classpath:/templates/,classpath:/templates/include/
spring.thymeleaf.suffix=.html



#allow override audithandller
spring.main.allow-bean-definition-overriding=true
GIT_TEST_DEBUG_UNSAFE_DIRECTORIES=true
#batch size
spring.jpa.properties.hibernate.default_batch_fetch_size = 1000


## possible to save files
#spring.servlet.multipart.enabled=true
## temporary location to save files
#spring.servlet.multipart.location=C:\\upload
# max size to upload all files in one
spring.servlet.multipart.max-request-size=100MB
# max size to upload one file
spring.servlet.multipart.max-file-size=20MB

# upload resources root
uploadPath=file:///C:/shop/
# upload ItemImg root
itemImgLocation=C:/shop/item
#
##image.path=C:\\upload
#
##Logger Setting
#logging.level.root=INFO


# naver
spring.security.oauth2.client.registration.naver.client-id = fLK66Rvyv82y8pQrD69J
spring.security.oauth2.client.registration.naver.client-secret = BY22d3Ymhf
spring.security.oauth2.client.registration.naver.scope = nickname,email
spring.security.oauth2.client.registration.naver.client-name = Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri = http://localhost:8900/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri = https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri = https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri = https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute = response

# google
spring.security.oauth2.client.registration.google.client-id = 120637705466-kchg29ccqrubtd0ieclpmg2ee2d668u7.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret = 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
spring.security.oauth2.client.registration.google.scope = profile, email

#Kakao
spring.security.oauth2.client.registration.kakao.client-id = ec929df3f4e9a6e50fde9aca27a1493b
spring.security.oauth2.client.registration.kakao.client-secret = TuqGDbBW5ZemPI1CThiWe3hHI8F16CYP
spring.security.oauth2.client.registration.kakao.scope = profile_nickname, account_email
spring.security.oauth2.client.registration.kakao.client-name = Kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri = http://localhost:8900/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method = POST

spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute = id





spring.main.allow-circular-references=true